# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protobufs.postmanagement_pb2 as postmanagement__pb2


class socialPostManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getAllPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/getAllPost',
                request_serializer=postmanagement__pb2.getAllPostRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.getAllPostResponse.FromString,
                )
        self.getPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/getPost',
                request_serializer=postmanagement__pb2.getAllPostRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.getAllPostResponse.FromString,
                )
        self.createPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/createPost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.updatePost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/updatePost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.deletePost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/deletePost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.commentOnPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/commentOnPost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.postSchedule = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/postSchedule',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.draftPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/draftPost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.customizeContentPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/customizeContentPost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )
        self.bulkPost = channel.unary_unary(
                '/protobufs.socialhubconnectors.socialPostManagement/bulkPost',
                request_serializer=postmanagement__pb2.postRequest.SerializeToString,
                response_deserializer=postmanagement__pb2.postResponse.FromString,
                )


class socialPostManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getAllPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updatePost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deletePost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def commentOnPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def postSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def draftPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def customizeContentPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bulkPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_socialPostManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getAllPost': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllPost,
                    request_deserializer=postmanagement__pb2.getAllPostRequest.FromString,
                    response_serializer=postmanagement__pb2.getAllPostResponse.SerializeToString,
            ),
            'getPost': grpc.unary_unary_rpc_method_handler(
                    servicer.getPost,
                    request_deserializer=postmanagement__pb2.getAllPostRequest.FromString,
                    response_serializer=postmanagement__pb2.getAllPostResponse.SerializeToString,
            ),
            'createPost': grpc.unary_unary_rpc_method_handler(
                    servicer.createPost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'updatePost': grpc.unary_unary_rpc_method_handler(
                    servicer.updatePost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'deletePost': grpc.unary_unary_rpc_method_handler(
                    servicer.deletePost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'commentOnPost': grpc.unary_unary_rpc_method_handler(
                    servicer.commentOnPost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'postSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.postSchedule,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'draftPost': grpc.unary_unary_rpc_method_handler(
                    servicer.draftPost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'customizeContentPost': grpc.unary_unary_rpc_method_handler(
                    servicer.customizeContentPost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
            'bulkPost': grpc.unary_unary_rpc_method_handler(
                    servicer.bulkPost,
                    request_deserializer=postmanagement__pb2.postRequest.FromString,
                    response_serializer=postmanagement__pb2.postResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protobufs.socialhubconnectors.socialPostManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class socialPostManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getAllPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/getAllPost',
            postmanagement__pb2.getAllPostRequest.SerializeToString,
            postmanagement__pb2.getAllPostResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/getPost',
            postmanagement__pb2.getAllPostRequest.SerializeToString,
            postmanagement__pb2.getAllPostResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/createPost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updatePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/updatePost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deletePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/deletePost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def commentOnPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/commentOnPost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def postSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/postSchedule',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def draftPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/draftPost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def customizeContentPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/customizeContentPost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def bulkPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobufs.socialhubconnectors.socialPostManagement/bulkPost',
            postmanagement__pb2.postRequest.SerializeToString,
            postmanagement__pb2.postResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
