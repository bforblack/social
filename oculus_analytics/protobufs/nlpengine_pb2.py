# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nlpengine.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nlpengine.proto',
  package='nlpengine',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0fnlpengine.proto\x12\tnlpengine\"\x1e\n\x0eRequestMessage\x12\x0c\n\x04text\x18\x01 \x01(\t\"L\n\x0fResponseMessage\x12\x11\n\tisSuccess\x18\x01 \x01(\x08\x12\x14\n\x0c\x65rrorMessage\x18\x02 \x01(\t\x12\x10\n\x08response\x18\x03 \x01(\t2\xa0\x02\n\tNLPEngine\x12@\n\x07Summary\x12\x19.nlpengine.RequestMessage\x1a\x1a.nlpengine.ResponseMessage\x12\x46\n\rTextAnalytics\x12\x19.nlpengine.RequestMessage\x1a\x1a.nlpengine.ResponseMessage\x12\x42\n\tSentiment\x12\x19.nlpengine.RequestMessage\x1a\x1a.nlpengine.ResponseMessage\x12\x45\n\x0cgetProfanity\x12\x19.nlpengine.RequestMessage\x1a\x1a.nlpengine.ResponseMessageb\x06proto3'
)




_REQUESTMESSAGE = _descriptor.Descriptor(
  name='RequestMessage',
  full_name='nlpengine.RequestMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='nlpengine.RequestMessage.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=60,
)


_RESPONSEMESSAGE = _descriptor.Descriptor(
  name='ResponseMessage',
  full_name='nlpengine.ResponseMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='isSuccess', full_name='nlpengine.ResponseMessage.isSuccess', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='errorMessage', full_name='nlpengine.ResponseMessage.errorMessage', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='response', full_name='nlpengine.ResponseMessage.response', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=138,
)

DESCRIPTOR.message_types_by_name['RequestMessage'] = _REQUESTMESSAGE
DESCRIPTOR.message_types_by_name['ResponseMessage'] = _RESPONSEMESSAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RequestMessage = _reflection.GeneratedProtocolMessageType('RequestMessage', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTMESSAGE,
  '__module__' : 'nlpengine_pb2'
  # @@protoc_insertion_point(class_scope:nlpengine.RequestMessage)
  })
_sym_db.RegisterMessage(RequestMessage)

ResponseMessage = _reflection.GeneratedProtocolMessageType('ResponseMessage', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEMESSAGE,
  '__module__' : 'nlpengine_pb2'
  # @@protoc_insertion_point(class_scope:nlpengine.ResponseMessage)
  })
_sym_db.RegisterMessage(ResponseMessage)



_NLPENGINE = _descriptor.ServiceDescriptor(
  name='NLPEngine',
  full_name='nlpengine.NLPEngine',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=141,
  serialized_end=429,
  methods=[
  _descriptor.MethodDescriptor(
    name='Summary',
    full_name='nlpengine.NLPEngine.Summary',
    index=0,
    containing_service=None,
    input_type=_REQUESTMESSAGE,
    output_type=_RESPONSEMESSAGE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='TextAnalytics',
    full_name='nlpengine.NLPEngine.TextAnalytics',
    index=1,
    containing_service=None,
    input_type=_REQUESTMESSAGE,
    output_type=_RESPONSEMESSAGE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Sentiment',
    full_name='nlpengine.NLPEngine.Sentiment',
    index=2,
    containing_service=None,
    input_type=_REQUESTMESSAGE,
    output_type=_RESPONSEMESSAGE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='getProfanity',
    full_name='nlpengine.NLPEngine.getProfanity',
    index=3,
    containing_service=None,
    input_type=_REQUESTMESSAGE,
    output_type=_RESPONSEMESSAGE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_NLPENGINE)

DESCRIPTOR.services_by_name['NLPEngine'] = _NLPENGINE

# @@protoc_insertion_point(module_scope)
